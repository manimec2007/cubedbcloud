cubes:
  - name: shipment
    sql:  WITH Periods
        AS
        (
        SELECT YEAR,
              MONTH,
              MONTH_NAME,
              MIN(MY_DATE) AS REPORT_DATE,
              DATE_ADD(DATE_TRUNC(MIN(MY_DATE),MONTH),INTERVAL -2 MONTH) AS FST_DATE,
              DATE_TRUNC(MIN(MY_DATE),MONTH) AS END_DATE,
              DATE_ADD(DATE_TRUNC(MIN(MY_DATE),MONTH),INTERVAL -3 MONTH) AS AVL_DATE,
              DATE_ADD(DATE_TRUNC(MIN(MY_DATE),MONTH),INTERVAL -1 MONTH) AS RST_DATE,
              DATE_ADD(DATE_TRUNC(MIN(MY_DATE),MONTH),INTERVAL -4 MONTH) AS PRV_DATE
        FROM `pharmsight-analytics.pharmsight_csl.MY_DATE_DIMENSION`
        WHERE MY_DATE BETWEEN '2017-01-01' and '2023-12-31'
        GROUP BY YEAR,
                MONTH,
                MONTH_NAME
        ),
        Patients
        AS
        (
          SELECT DISTINCT 
                FULL_PRODUCT_NAME,
                TERTIARY_ICD_CODES,
                PHYSICIAN_CITY,
                PHYSICIAN_STATE,
                PRIMARY_PAYER_NAME,
                PRIMARY_PAYER_TYPE,
                PRIMARY_BENEFIT_TYPE,
                PRIMARY_PLAN_NAME,
                PRIMARY_PLAN_TYPE,
                REGIMEN,
                PAYER_CITY,
                PAYER_STATE,
                PAYER_ZIP,
                MDM_PAT_ID,
                INDICATION_CATEGORY,
                SPECIALTY_PHARMACY_NAME,
                DATE_TRUNC(SHIP_DATE,MONTH) AS UN_DATES,
                DATE_TRUNC(PATIENT_FIRST_SHIP_DATE,MONTH) AS FIRST_SHIP_DATE
          FROM `pharmsight-analytics.pharmsight_csl.shipment`
        ),
        Final
        AS
        (
              SELECT P.REPORT_DATE,
                      P.YEAR,
                      P.MONTH,
                      P.MONTH_NAME,
                      S.*,
                      'DRP' AS FLG
              FROM Periods P
              INNER JOIN Patients S
              ON S.UN_DATES = P.AVL_DATE
              WHERE NOT EXISTS (
                      SELECT P1.REPORT_DATE,
                            S1.MDM_PAT_ID
                      FROM Periods P1
                      INNER JOIN Patients S1
                      ON S1.UN_DATES BETWEEN P1.FST_DATE AND P1.END_DATE
                      WHERE S.MDM_PAT_ID = S1.MDM_PAT_ID
                      AND P.REPORT_DATE = P1.REPORT_DATE
              )
              UNION ALL
              SELECT P.REPORT_DATE,
                      P.YEAR,
                      P.MONTH,
                      P.MONTH_NAME,
                      S.*,
                      'NEW' AS FLG
              FROM Periods P
              INNER JOIN Patients S
              ON S.FIRST_SHIP_DATE = P.REPORT_DATE
              UNION ALL
              SELECT P.REPORT_DATE,
                      P.YEAR,
                      P.MONTH,
                      P.MONTH_NAME,
                      S.*,
                      'ACT' AS FLG
              FROM Periods P
              INNER JOIN Patients S
              ON S.UN_DATES BETWEEN P.FST_DATE AND P.END_DATE
              UNION ALL
              SELECT P.REPORT_DATE,
                      P.YEAR,
                      P.MONTH,
                      P.MONTH_NAME,
                      S.*,
                      'DIS' AS FLG
              FROM Periods P
              INNER JOIN Patients S
              ON S.UN_DATES = P.REPORT_DATE
              UNION ALL
              SELECT P.REPORT_DATE,
                      P.YEAR,
                      P.MONTH,
                      P.MONTH_NAME,
                      S.*,
                      'RST' AS FLG
              FROM Periods P
              INNER JOIN Patients S
              ON S.UN_DATES BETWEEN P.FST_DATE AND P.END_DATE
              WHERE NOT EXISTS (
                      SELECT P1.REPORT_DATE,
                            S1.MDM_PAT_ID
                      FROM Periods P1
                      INNER JOIN Patients S1
                      ON S1.UN_DATES BETWEEN P.AVL_DATE AND P.RST_DATE
                      WHERE S.MDM_PAT_ID = S1.MDM_PAT_ID
                      AND P.REPORT_DATE = P1.REPORT_DATE
              )
              AND EXISTS (
                      SELECT P2.REPORT_DATE,
                            S2.MDM_PAT_ID
                      FROM Periods P2
                      INNER JOIN Patients S2
                      ON S2.UN_DATES = P.PRV_DATE
                      WHERE S.MDM_PAT_ID = S2.MDM_PAT_ID
                      AND P.REPORT_DATE = P2.REPORT_DATE
              )
        )
        SELECT  MONTH,
                YEAR,
                MONTH_NAME,
                REPORT_DATE,
                FLG,
                FULL_PRODUCT_NAME,
                TERTIARY_ICD_CODES,
                PHYSICIAN_CITY,
                PHYSICIAN_STATE,
                PRIMARY_PAYER_NAME,
                PRIMARY_PAYER_TYPE,
                PRIMARY_BENEFIT_TYPE,
                PRIMARY_PLAN_NAME,
                PRIMARY_PLAN_TYPE,
                REGIMEN,
                PAYER_CITY,
                PAYER_STATE,
                MDM_PAT_ID,
                INDICATION_CATEGORY,
                PAYER_ZIP,
                SPECIALTY_PHARMACY_NAME
        FROM Final
          
    refresh_key:
      every: 6 week

    joins: []

    dimensions:
      - name: ship_date
        sql: TIMESTAMP(REPORT_DATE)
        type: time

      - name: full_product_name
        sql: FULL_PRODUCT_NAME
        type: string

      - name: physician_city
        sql: PHYSICIAN_CITY
        type: string

      - name: physician_state
        sql: PHYSICIAN_STATE
        type: string

      - name: primary_payer_name
        sql: PRIMARY_PAYER_NAME
        type: string 

      - name: primary_plan_name
        sql: PRIMARY_PLAN_NAME
        type: string

      - name: primary_plan_type
        sql: PRIMARY_PLAN_TYPE
        type: string

      - name: regimen
        sql: REGIMEN
        type: string

      - name: payer_city
        sql: PAYER_CITY
        type: string

      - name: payer_state
        sql: PAYER_STATE
        type: string

      - name: mdm_pat_id
        sql: MDM_PAT_ID
        type: string

      - name: indication_category
        sql: INDICATION_CATEGORY
        type: string

      - name: payer_zip
        sql: PAYER_ZIP
        type: string

      - name: ship_month
        sql: MONTH
        type: number

      - name: ship_year 
        sql: YEAR
        type: number

      - name: ship_month_name
        sql: MONTH_NAME
        type: string

      - name: specialty_pharmacy_name
        sql: SPECIALTY_PHARMACY_NAME
        type: string

      - name: primary_payer_type
        sql: PRIMARY_PAYER_TYPE
        type: string 
        
      
      - name: restartPatientFlag
        sql: |
          SELECT MDM_PAT_ID,
                 CASE 
                   WHEN UN_DATES BETWEEN FST_DATE AND END_DATE 
                   AND NOT EXISTS (
                     SELECT 1
                     FROM Patients S1
                     JOIN Periods P1 ON S1.UN_DATES BETWEEN P1.AVL_DATE AND P1.RST_DATE
                     WHERE S1.MDM_PAT_ID = Patients.MDM_PAT_ID
                     AND Periods.REPORT_DATE = P1.REPORT_DATE
                   )
                   AND EXISTS (
                     SELECT 1
                     FROM Patients S2
                     JOIN Periods P2 ON S2.UN_DATES = P2.PRV_DATE
                     WHERE S2.MDM_PAT_ID = Patients.MDM_PAT_ID
                     AND Periods.REPORT_DATE = P2.REPORT_DATE
                   ) THEN 'RST'
                   ELSE 'OTHER'
                 END AS STATUS
          FROM Patients
          JOIN Periods ON Patients.UN_DATES BETWEEN Periods.FST_DATE AND Periods.END_DATE
          GROUP BY MDM_PAT_ID
        type: string
        subQuery: true


      
    measures:
      - name: active_patients_count
        sql: "CASE WHEN {CUBE}.FLG='ACT' THEN MDM_PAT_ID END"
        type: count_distinct

      - name: new_patients_count
        sql: "CASE WHEN {CUBE}.FLG='NEW' THEN MDM_PAT_ID END"
        type: count_distinct

      - name: dropoff_patients_count
        sql: "CASE WHEN {CUBE}.FLG='DRP' THEN MDM_PAT_ID END"
        type: count_distinct

      - name: dispensed_patients_count
        sql: "CASE WHEN {CUBE}.FLG='DIS' THEN MDM_PAT_ID END"
        type: count_distinct

      - name: restart_patients_count
        sql: "CASE WHEN {CUBE}.FLG='RST' THEN MDM_PAT_ID END"
        type: count_distinct


    pre_aggregations: 
      restartPatients: 
       type: rollup
       measureReferences: [restartPatientsCount]
       dimensionReferences: [restartPatientFlag, shipMonth, shipYear]
       timeDimensionReference: shipDate
       granularity: month